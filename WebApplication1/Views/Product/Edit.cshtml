@model WebApplication1.Models.Product

<div class="container mt-5">
    <h1 class="display-4">Edit Product</h1>

    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="Id" />

        <div class="form-group">
            <label asp-for="Name">Product Name</label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Description">Description</label>
            <input asp-for="Description" class="form-control" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Price">Price</label>
            <input asp-for="Price" class="form-control" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="CategoryIds">Categories</label>
            <select asp-for="CategoryIds" asp-items="@(new SelectList(ViewBag.CategoryNames, "Id", "Name"))" class="form-control" multiple></select>
            <span asp-validation-for="CategoryIds" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>

    <a asp-action="Index" class="btn btn-secondary mt-2">Back to List</a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var form = $("form");

            form.submit(function () {
                if (form.valid()) {
                    $("button[type='submit']").prop("disabled", true); // Disable the button on form submit
                }
            });

            form.validate(); // Initialize jQuery validation on the form
        });
    </script>
}
